general:
  name:
#  scenario: 'simple'
#  scenario: 'hard'
#  scenario: 'point_robot_easy'
  scenario: 'point_robot_easy2'
#  scenario: 'point_robot_corridor'
#  scenario: 'point_robot_hard_corridors'
  gpu_usage: 0.2
  write_summaries_every: 3
  training_cycles: 1000000
#  training_cycles: 300
  episodes_per_cycle: 1000
#  episodes_per_cycle: 3
  save_every_cycles: 1000
  cycles_per_trajectory_print: 10
#  gain: 'full-traj'
  gain: 'future-only'

cost:
#  collision_cost: 10.0
#  collision_cost: 100.0
  collision_cost: 200.0
  free_cost: 1.0

openrave:
  segment_validity_step: 0.001

model:
  levels: 2
#  levels: 5
  batch_size: 20000
  decrease_learn_rate_if_static_success: 50
#  decrease_learn_rate_if_static_success: 3
#  decrease_learn_rate_if_static_success: 2
#  stop_training_after_learn_rate_decrease: 10
  stop_training_after_learn_rate_decrease: 3
#  stop_training_after_learn_rate_decrease: 2
#  stop_training_after_learn_rate_decrease: 1


policy:
#  learning_rate: 0.001
  learning_rate: 0.00005
#  learning_rate: 0.01
#  learning_rate_decrease_rate: 1.
  learning_rate_decrease_rate: 0.8
  learning_rate_minimum: 0.0000001
#  gradient_limit: 0.0
#  gradient_limit: 1000.0 # for cost 100
  gradient_limit: 10000.0 # for cost 200
#  gradient_limit: 500.0
  #  layers: [400, 400, 400, 400, 100, 100, 100]
  number_of_gaussians: 1
  layers: [400, 400, 400, 400]
  activation: 'elu'
#  activation: 'relu'

